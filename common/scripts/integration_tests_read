#!/usr/bin/env bash -ex
#
# This file runs the following scripts in the programming language directories
# using access tokens associated with a test account on Pinterest:
#   refresh_access_token
#   get_access_token
#   refresh_example
#   get_pin
#   get_user_pins
#   get_board
#   get_user_boards
#
# All of these scripts are read-only, so it should always be safe to run
# the tests in this file.
#
# The tests in this file are only self-checking to the extent that all
# should run to completion successfully. Knowledge about the test account
# and manual checking is required to verify that the tests all returned
# the expected data. Of course, it would be better to check the results
# automatically, but for now the automation focuses on running a standard
# set of tests.
#

# Verify that this script is being run in an appropriate directory,
# and select the corresponding script filename extension.
case "$(basename $(pwd))" in
    python) EXT=py ;;
    nodejs) EXT=js ;;
    *)
        echo This script must be run in the python or the nodejs directory.
        exit 1
esac

# These variables are specific to the user names, pin id, and board id
# to be used for this test.
TEST1=pindexterp
PIN=1097963584125248823
BOARD=1097963652843192243

# Versions to test. This variable should not need to change.
VERSIONS="v3 v5"

# first refresh the tokens in case it has been a while since the tests were last run
for VERSION in ${VERSIONS} ; do
    ./scripts/refresh_access_token.${EXT} -a ${TEST1}_${VERSION} -${VERSION}
done

# verify the user_account fetch with the refreshed tokens
for VERSION in ${VERSIONS} ; do
    ./scripts/get_access_token.${EXT} -a ${TEST1}_${VERSION} -${VERSION}
done

# run the refresh example script
for VERSION in ${VERSIONS} ; do
    ./scripts/refresh_example.${EXT} -a ${TEST1}_${VERSION} -${VERSION}
done

for VERSION in ${VERSIONS} ; do
    ./scripts/get_pin.${EXT} -p ${PIN} -a ${TEST1}_${VERSION} -${VERSION}
done

# get the user pins for the pindexter account
for VERSION in ${VERSIONS} ; do
    ./scripts/get_user_pins.${EXT} --page-size 100 -a ${TEST1}_${VERSION} -${VERSION}
done

# get a specific board for the pindexter account
for VERSION in ${VERSIONS} ; do
    ./scripts/get_board.${EXT} -a ${TEST1}_${VERSION} -${VERSION} -b ${BOARD}
done

# get a specific board and the pins on the board
for VERSION in ${VERSIONS} ; do
    ./scripts/get_board.${EXT} -a ${TEST1}_${VERSION} -${VERSION} -b ${BOARD} --pins
done

# get the user boards with the pins for the pindexter account
for VERSION in ${VERSIONS} ; do
    ./scripts/get_user_boards.${EXT} -a ${TEST1}_${VERSION} -${VERSION}
done
