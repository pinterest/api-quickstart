#!/usr/bin/env bash
#
# This file runs the following scripts in the programming language directories
# using access tokens associated with a test account on Pinterest:
#   refresh_access_token
#   get_access_token
#   refresh_example
#   get_pin
#   get_user_pins
#   get_board
#   get_user_boards
#
# All of these scripts are read-only, so it should always be safe to run
# the tests in this file.
#
# The tests in this file are only self-checking to the extent that all
# should run to completion successfully. Knowledge about the test account
# and manual checking is required to verify that the tests all returned
# the expected data. Of course, it would be better to check the results
# automatically, but for now the automation focuses on running a standard
# set of tests.
#

# get the location of this script
# shellcheck disable=SC2164 # because the directory definitely exists
SCRIPT_DIR=$(cd "$(dirname "$0")"; pwd)

# source the common test script code
# shellcheck source=./e2e_tests_preamble
. "${SCRIPT_DIR}"/e2e_tests_preamble

# verify the user_account fetch
./scripts/get_access_token.${EXT} -a "${TEST1}"

# run the refresh example script
./scripts/refresh_example.${EXT} -a "${TEST1}"

# get a single pin
./scripts/get_pin.${EXT} -p ${PIN} -a "${TEST1}"

# get the user pins for the pindexter account
./scripts/get_user_pins.${EXT} --page-size 100 -a "${TEST1}"

# get a specific board for the pindexter account
./scripts/get_board.${EXT} -a "${TEST1}" -b ${BOARD}

# get a specific board and the pins on the board
./scripts/get_board.${EXT} -a "${TEST1}" -b ${BOARD} --pins

# get the user boards for the pindexter account
./scripts/get_user_boards.${EXT} -a "${TEST1}"

# get pin analytics
DOCNAME=${OUTPUT_PREFIX}_pin_analytics.json
printf "${DOCNAME}\n" | \
    ./scripts/get_analytics.${EXT} -a ${TEST1} -o pin --pin-id ${PIN}
wc ${DOCNAME}

# delete output files
rm -f ${OUTPUT_PREFIX}_*.json
