#!/usr/bin/env bash
#
#
# End-to-end (e2e) tests that read advertising objects and analytics data.
#
# This file runs the following scripts in the programming language directories
# using access tokens associated with a test account on Pinterest:
#   get_ads
#   get_analytics
#   analytics_api_example
#
# All of these scripts are read-only, so it should always be safe to run
# the tests in this file.
#
# The tests in this file are only self-checking to the extent that all
# should run to completion successfully. Knowledge about the test account
# and manual checking is required to verify that the tests all returned
# the expected data. Of course, it would be better to check the results
# automatically, but for now the automation focuses on running a standard
# set of tests.
#
# Note: The data entered via the printf statements needs to be changed
# from time-to-time to match the campaigns running on the associated
# account. It might be necessary to run the commands by hand to figure
# out a sequence of responses that will generate each analytics report.
#

# get the location of this script
SCRIPT_DIR=$(cd $(dirname $0); pwd)

# source the common test script code
. ${SCRIPT_DIR}/e2e_tests_preamble

OUTPUT_PREFIX=e2etest

# delete output files to avoid overwrite confirmations by scripts
rm -f ${OUTPUT_PREFIX}_*.csv
rm -f ${OUTPUT_PREFIX}_*.json

# Note: Pinterest ads test account tokens need to be recreated manually
# once every 30 days. The following commands test to see whether the token
# is valid.
for VERSION in ${VERSIONS} ; do
    ./scripts/get_access_token.${EXT} -a ${TEST3}_${VERSION} -${VERSION}
    ./scripts/get_access_token.${EXT} -a ${TEST4}_${VERSION} -${VERSION}
done

# get asynchronous analytics report
for VERSION in ${VERSIONS} ; do
    # python does not yet support v5...
    if [[ "${VERSION}" == "v3" || "${EXT}" == "js" ]] ; then
        DOCNAME=${OUTPUT_PREFIX}_${VERSION}_metrics_report.csv
        printf "1\n${DOCNAME}\n" | \
            ./scripts/analytics_api_example.${EXT} -a ${TEST3}_${VERSION} -${VERSION}
        wc ${DOCNAME}
    fi
done

# get all of the ads-related data for the test account
for VERSION in ${VERSIONS} ; do
    ./scripts/get_ads.${EXT} -a ${TEST4}_${VERSION} -${VERSION} --all-ads
done

# get user analytics
for VERSION in ${VERSIONS} ; do
    DOCNAME=${OUTPUT_PREFIX}_user_analytics_${VERSION}.json
    echo ${DOCNAME} | \
         ./scripts/get_analytics.${EXT} -a ${TEST3}_${VERSION} -${VERSION}
    wc ${DOCNAME}
done

# get ad_account_user analytics (only available for v5)
DOCNAME=${OUTPUT_PREFIX}_ad_account_user_analytics_v5.json
printf "1\n${DOCNAME}\n" | \
    ./scripts/get_analytics.${EXT} -a ${TEST3}_v5 -v5 -o ad_account_user
wc ${DOCNAME}

# get ad_account analytics
for VERSION in ${VERSIONS} ; do
    DOCNAME=${OUTPUT_PREFIX}_ad_account_analytics_${VERSION}.json
    printf "1\n${DOCNAME}\n" | \
         ./scripts/get_analytics.${EXT} -a ${TEST3}_${VERSION} -${VERSION} -o ad_account
    wc ${DOCNAME}
done

# get campaign analytics
for VERSION in ${VERSIONS} ; do
    DOCNAME=${OUTPUT_PREFIX}_campaign_analytics_${VERSION}.json
    printf "${DOCNAME}\n" | \
         ./scripts/get_analytics.${EXT} -a ${TEST3}_${VERSION} -${VERSION} -o campaign --ad-account-id ${TEST3_AD_ACCOUNT_ID} --campaign-id ${TEST3_CAMPAIGN_ID}
    wc ${DOCNAME}
done

# get ad group analytics
for VERSION in ${VERSIONS} ; do
    DOCNAME=${OUTPUT_PREFIX}_ad_group_analytics_${VERSION}.json
    printf "${DOCNAME}\n" | \
         ./scripts/get_analytics.${EXT} -a ${TEST3}_${VERSION} -${VERSION} -o ad_group --ad-account-id ${TEST3_AD_ACCOUNT_ID} --campaign-id ${TEST3_CAMPAIGN_ID}
    wc ${DOCNAME}
done

# get ad analytics
for VERSION in ${VERSIONS} ; do
    DOCNAME=${OUTPUT_PREFIX}_ad_analytics_${VERSION}.json
    printf "${DOCNAME}\n" | \
         ./scripts/get_analytics.${EXT} -a ${TEST3}_${VERSION} -${VERSION} -o ad --ad-account-id ${TEST3_AD_ACCOUNT_ID} --campaign-id ${TEST3_CAMPAIGN_ID}
    wc ${DOCNAME}
done

# all tests existed successfully: delete output files
rm -f ${OUTPUT_PREFIX}_*.json
rm -f ${OUTPUT_PREFIX}_*.csv
